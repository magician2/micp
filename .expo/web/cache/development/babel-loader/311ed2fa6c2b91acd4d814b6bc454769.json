{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport invariant from 'invariant';\nimport { CameraType, ImageType } from \"./Camera.types\";\nimport * as CapabilityUtils from \"./WebCapabilityUtils\";\nimport { CameraTypeToFacingMode, ImageTypeFormat, MinimumConstraints } from \"./WebConstants\";\nimport { requestUserMediaAsync } from \"./WebUserMediaManager\";\nexport function getImageSize(videoWidth, videoHeight, scale) {\n  var width = videoWidth * scale;\n  var ratio = videoWidth / width;\n  var height = videoHeight / ratio;\n  return {\n    width: width,\n    height: height\n  };\n}\nexport function toDataURL(canvas, imageType, quality) {\n  invariant(Object.values(ImageType).includes(imageType), \"expo-camera: \" + imageType + \" is not a valid ImageType. Expected a string from: \" + Object.values(ImageType).join(', '));\n  var format = ImageTypeFormat[imageType];\n\n  if (imageType === ImageType.jpg) {\n    invariant(quality <= 1 && quality >= 0, \"expo-camera: \" + quality + \" is not a valid image quality. Expected a number from 0...1\");\n    return canvas.toDataURL(format, quality);\n  } else {\n    return canvas.toDataURL(format);\n  }\n}\nexport function hasValidConstraints(preferredCameraType, width, height) {\n  return preferredCameraType !== undefined && width !== undefined && height !== undefined;\n}\n\nfunction ensureCameraPictureOptions(config) {\n  var captureOptions = {\n    scale: 1,\n    imageType: ImageType.png,\n    isImageMirror: false\n  };\n\n  for (var key in config) {\n    if (key in config && config[key] !== undefined && key in captureOptions) {\n      captureOptions[key] = config[key];\n    }\n  }\n\n  return captureOptions;\n}\n\nvar DEFAULT_QUALITY = 0.92;\nexport function captureImageData(video) {\n  var pictureOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!video || video.readyState !== video.HAVE_ENOUGH_DATA) {\n    return null;\n  }\n\n  var canvas = captureImageContext(video, pictureOptions);\n  var context = canvas.getContext('2d', {\n    alpha: false\n  });\n\n  if (!context || !canvas.width || !canvas.height) {\n    return null;\n  }\n\n  var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n  return imageData;\n}\nexport function captureImageContext(video, _ref) {\n  var _ref$scale = _ref.scale,\n      scale = _ref$scale === void 0 ? 1 : _ref$scale,\n      _ref$isImageMirror = _ref.isImageMirror,\n      isImageMirror = _ref$isImageMirror === void 0 ? false : _ref$isImageMirror;\n  var videoWidth = video.videoWidth,\n      videoHeight = video.videoHeight;\n\n  var _getImageSize = getImageSize(videoWidth, videoHeight, scale),\n      width = _getImageSize.width,\n      height = _getImageSize.height;\n\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  var context = canvas.getContext('2d', {\n    alpha: false\n  });\n\n  if (!context) {\n    throw new Error('Context is not defined');\n  }\n\n  if (isImageMirror) {\n    context.setTransform(-1, 0, 0, 1, canvas.width, 0);\n  }\n\n  context.drawImage(video, 0, 0, width, height);\n  return canvas;\n}\nexport function captureImage(video, pictureOptions) {\n  var config = ensureCameraPictureOptions(pictureOptions);\n  var canvas = captureImageContext(video, config);\n  var imageType = config.imageType,\n      _config$quality = config.quality,\n      quality = _config$quality === void 0 ? DEFAULT_QUALITY : _config$quality;\n  return toDataURL(canvas, imageType, quality);\n}\n\nfunction getSupportedConstraints() {\n  if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n    return navigator.mediaDevices.getSupportedConstraints();\n  }\n\n  return null;\n}\n\nexport function getIdealConstraints(preferredCameraType, width, height) {\n  var preferredConstraints = {\n    audio: false,\n    video: {}\n  };\n\n  if (hasValidConstraints(preferredCameraType, width, height)) {\n    return MinimumConstraints;\n  }\n\n  var supports = getSupportedConstraints();\n\n  if (!supports || !supports.facingMode || !supports.width || !supports.height) {\n    return MinimumConstraints;\n  }\n\n  if (preferredCameraType && Object.values(CameraType).includes(preferredCameraType)) {\n    var facingMode = CameraTypeToFacingMode[preferredCameraType];\n\n    if (isWebKit()) {\n      var key = facingMode === 'user' ? 'exact' : 'ideal';\n      preferredConstraints.video.facingMode = _defineProperty({}, key, facingMode);\n    } else {\n      preferredConstraints.video.facingMode = {\n        ideal: CameraTypeToFacingMode[preferredCameraType]\n      };\n    }\n  }\n\n  if (isMediaTrackConstraints(preferredConstraints.video)) {\n    preferredConstraints.video.width = width;\n    preferredConstraints.video.height = height;\n  }\n\n  return preferredConstraints;\n}\n\nfunction isMediaTrackConstraints(input) {\n  return input && typeof input.video !== 'boolean';\n}\n\nexport function getPreferredStreamDevice(preferredCameraType, preferredWidth, preferredHeight) {\n  var nextCameraType;\n  return _regeneratorRuntime.async(function getPreferredStreamDevice$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getStreamDevice(preferredCameraType, preferredWidth, preferredHeight));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (!(_context.t0 instanceof OverconstrainedError && _context.t0.constraint === 'facingMode')) {\n            _context.next = 13;\n            break;\n          }\n\n          nextCameraType = preferredCameraType === CameraType.back ? CameraType.front : CameraType.back;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getStreamDevice(nextCameraType, preferredWidth, preferredHeight));\n\n        case 12:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 13:\n          throw _context.t0;\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nexport function getStreamDevice(preferredCameraType, preferredWidth, preferredHeight) {\n  var constraints, stream;\n  return _regeneratorRuntime.async(function getStreamDevice$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          constraints = getIdealConstraints(preferredCameraType, preferredWidth, preferredHeight);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(requestUserMediaAsync(constraints));\n\n        case 3:\n          stream = _context2.sent;\n          return _context2.abrupt(\"return\", stream);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isWebKit() {\n  return /WebKit/.test(navigator.userAgent) && !/Edg/.test(navigator.userAgent);\n}\nexport function compareStreams(a, b) {\n  if (!a || !b) {\n    return false;\n  }\n\n  var settingsA = a.getTracks()[0].getSettings();\n  var settingsB = b.getTracks()[0].getSettings();\n  return settingsA.deviceId === settingsB.deviceId;\n}\nexport function capture(video, settings, config) {\n  var base64 = captureImage(video, config);\n  var capturedPicture = {\n    uri: base64,\n    base64: base64,\n    width: 0,\n    height: 0\n  };\n\n  if (settings) {\n    var _settings$width = settings.width,\n        width = _settings$width === void 0 ? 0 : _settings$width,\n        _settings$height = settings.height,\n        height = _settings$height === void 0 ? 0 : _settings$height;\n    capturedPicture.width = width;\n    capturedPicture.height = height;\n    capturedPicture.exif = settings;\n  }\n\n  if (config.onPictureSaved) {\n    config.onPictureSaved(capturedPicture);\n  }\n\n  return capturedPicture;\n}\nexport function syncTrackCapabilities(cameraType, stream) {\n  var settings,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function syncTrackCapabilities$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          settings = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n\n          if (!(stream != null && stream.getVideoTracks)) {\n            _context3.next = 4;\n            break;\n          }\n\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(Promise.all(stream.getVideoTracks().map(function (track) {\n            return onCapabilitiesReady(cameraType, track, settings);\n          })));\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction onCapabilitiesReady(cameraType, track) {\n  var settings,\n      capabilities,\n      constraints,\n      clampedValues,\n      _i,\n      _clampedValues,\n      property,\n      validatedInternalConstrainedValue,\n      _args4 = arguments;\n\n  return _regeneratorRuntime.async(function onCapabilitiesReady$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          validatedInternalConstrainedValue = function _validatedInternalCon(constraintKey, settingsKey, converter) {\n            var convertedSetting = converter(settings[settingsKey]);\n            return validatedConstrainedValue({\n              constraintKey: constraintKey,\n              settingsKey: settingsKey,\n              convertedSetting: convertedSetting,\n              capabilities: capabilities,\n              settings: settings,\n              cameraType: cameraType\n            });\n          };\n\n          settings = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n          capabilities = track.getCapabilities();\n          constraints = {};\n          clampedValues = ['exposureCompensation', 'colorTemperature', 'iso', 'brightness', 'contrast', 'saturation', 'sharpness', 'focusDistance', 'zoom'];\n\n          for (_i = 0, _clampedValues = clampedValues; _i < _clampedValues.length; _i++) {\n            property = _clampedValues[_i];\n\n            if (capabilities[property]) {\n              constraints[property] = convertNormalizedSetting(capabilities[property], settings[property]);\n            }\n          }\n\n          if (capabilities.focusMode && settings.autoFocus !== undefined) {\n            constraints.focusMode = validatedInternalConstrainedValue('focusMode', 'autoFocus', CapabilityUtils.convertAutoFocusJSONToNative);\n          }\n\n          if (capabilities.torch && settings.flashMode !== undefined) {\n            constraints.torch = validatedInternalConstrainedValue('torch', 'flashMode', CapabilityUtils.convertFlashModeJSONToNative);\n          }\n\n          if (capabilities.whiteBalanceMode && settings.whiteBalance !== undefined) {\n            constraints.whiteBalanceMode = validatedInternalConstrainedValue('whiteBalanceMode', 'whiteBalance', CapabilityUtils.convertWhiteBalanceJSONToNative);\n          }\n\n          _context4.prev = 9;\n          _context4.next = 12;\n          return _regeneratorRuntime.awrap(track.applyConstraints({\n            advanced: [constraints]\n          }));\n\n        case 12:\n          _context4.next = 17;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](9);\n          if (__DEV__) console.warn('Failed to apply constraints', _context4.t0);\n\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[9, 14]], Promise);\n}\n\nexport function stopMediaStream(stream) {\n  if (!stream) {\n    return;\n  }\n\n  if (stream.getAudioTracks) {\n    stream.getAudioTracks().forEach(function (track) {\n      return track.stop();\n    });\n  }\n\n  if (stream.getVideoTracks) {\n    stream.getVideoTracks().forEach(function (track) {\n      return track.stop();\n    });\n  }\n\n  if (isMediaStreamTrack(stream)) {\n    stream.stop();\n  }\n}\nexport function setVideoSource(video, stream) {\n  var _window$URL$createObj;\n\n  var createObjectURL = (_window$URL$createObj = window.URL.createObjectURL) != null ? _window$URL$createObj : window.webkitURL.createObjectURL;\n\n  if (typeof video.srcObject !== 'undefined') {\n    video.srcObject = stream;\n  } else if (typeof video.mozSrcObject !== 'undefined') {\n    video.mozSrcObject = stream;\n  } else if (stream && createObjectURL) {\n    video.src = createObjectURL(stream);\n  }\n\n  if (!stream) {\n    var _window$URL$revokeObj, _ref2, _video$src;\n\n    var revokeObjectURL = (_window$URL$revokeObj = window.URL.revokeObjectURL) != null ? _window$URL$revokeObj : window.webkitURL.revokeObjectURL;\n    var source = (_ref2 = (_video$src = video.src) != null ? _video$src : video.srcObject) != null ? _ref2 : video.mozSrcObject;\n\n    if (revokeObjectURL && typeof source === 'string') {\n      revokeObjectURL(source);\n    }\n  }\n}\nexport function isCapabilityAvailable(video, keyName) {\n  var stream = video.srcObject;\n\n  if (stream instanceof MediaStream) {\n    var _videoTrack$getCapabi;\n\n    var videoTrack = stream.getVideoTracks()[0];\n    return videoTrack.getCapabilities == null ? void 0 : (_videoTrack$getCapabi = videoTrack.getCapabilities()) == null ? void 0 : _videoTrack$getCapabi[keyName];\n  }\n\n  return false;\n}\n\nfunction isMediaStreamTrack(input) {\n  return typeof input.stop === 'function';\n}\n\nfunction convertNormalizedSetting(range, value) {\n  if (!value) {\n    return;\n  }\n\n  var converted = convertRange(value, [range.min, range.max]);\n  return Math.min(range.max, Math.max(range.min, converted));\n}\n\nfunction convertRange(value, r2) {\n  var r1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 1];\n  return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n}\n\nfunction validatedConstrainedValue(props) {\n  var constraintKey = props.constraintKey,\n      settingsKey = props.settingsKey,\n      convertedSetting = props.convertedSetting,\n      capabilities = props.capabilities,\n      settings = props.settings,\n      cameraType = props.cameraType;\n  var setting = settings[settingsKey];\n\n  if (Array.isArray(capabilities[constraintKey]) && convertedSetting && !capabilities[constraintKey].includes(convertedSetting)) {\n    if (__DEV__) {\n      console.warn(\" { \" + settingsKey + \": \\\"\" + setting + \"\\\" } (converted to \\\"\" + convertedSetting + \"\\\" in the browser) is not supported for camera type \\\"\" + cameraType + \"\\\" in your browser. Using the default value instead.\");\n    }\n\n    return undefined;\n  }\n\n  return convertedSetting;\n}","map":{"version":3,"mappings":";;AACA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,SACEC,UADF,EAIEC,SAJF;AAQA,OAAO,KAAKC,eAAZ;AACA,SAASC,sBAAT,EAAiCC,eAAjC,EAAkDC,kBAAlD;AACA,SAASC,qBAAT;AASA,OAAM,SAAUC,YAAV,CAAuBC,UAAvB,EAA2CC,WAA3C,EAAgEC,KAAhE,EAA6E;EACjF,IAAMC,KAAK,GAAGH,UAAU,GAAGE,KAA3B;EACA,IAAME,KAAK,GAAGJ,UAAU,GAAGG,KAA3B;EACA,IAAME,MAAM,GAAGJ,WAAW,GAAGG,KAA7B;EAEA,OAAO;IACLD,KAAK,EAALA,KADK;IAELE,MAAM,EAANA;EAFK,CAAP;AAID;AAED,OAAM,SAAUC,SAAV,CACJC,MADI,EAEJC,SAFI,EAGJC,OAHI,EAGW;EAEflB,SAAS,CACPmB,MAAM,CAACC,MAAP,CAAclB,SAAd,EAAyBmB,QAAzB,CAAkCJ,SAAlC,CADO,oBAESA,SAFT,2DAEwEE,MAAM,CAACC,MAAP,CAC7ElB,SAD6E,EAE7EoB,IAF6E,CAExE,IAFwE,CAFxE,CAAT;EAOA,IAAMC,MAAM,GAAGlB,eAAe,CAACY,SAAD,CAA9B;;EACA,IAAIA,SAAS,KAAKf,SAAS,CAACsB,GAA5B,EAAiC;IAC/BxB,SAAS,CACPkB,OAAO,IAAI,CAAX,IAAgBA,OAAO,IAAI,CADpB,oBAESA,OAFT,iEAAT;IAIA,OAAOF,MAAM,CAACD,SAAP,CAAiBQ,MAAjB,EAAyBL,OAAzB,CAAP;EACD,CAND,MAMO;IACL,OAAOF,MAAM,CAACD,SAAP,CAAiBQ,MAAjB,CAAP;EACD;AACF;AAED,OAAM,SAAUE,mBAAV,CACJC,mBADI,EAEJd,KAFI,EAGJE,MAHI,EAGgC;EAEpC,OAAOY,mBAAmB,KAAKC,SAAxB,IAAqCf,KAAK,KAAKe,SAA/C,IAA4Db,MAAM,KAAKa,SAA9E;AACD;;AAED,SAASC,0BAAT,CAAoCC,MAApC,EAAgE;EAC9D,IAAMC,cAAc,GAAG;IACrBnB,KAAK,EAAE,CADc;IAErBM,SAAS,EAAEf,SAAS,CAAC6B,GAFA;IAGrBC,aAAa,EAAE;EAHM,CAAvB;;EAMA,KAAK,IAAMC,GAAX,IAAkBJ,MAAlB,EAA0B;IACxB,IAAII,GAAG,IAAIJ,MAAP,IAAiBA,MAAM,CAACI,GAAD,CAAN,KAAgBN,SAAjC,IAA8CM,GAAG,IAAIH,cAAzD,EAAyE;MACvEA,cAAc,CAACG,GAAD,CAAd,GAAsBJ,MAAM,CAACI,GAAD,CAA5B;IACD;EACF;;EACD,OAAOH,cAAP;AACD;;AAED,IAAMI,eAAe,GAAG,IAAxB;AAEA,OAAM,SAAUC,gBAAV,CACJC,KADI,EAEsE;EAAA,IAA1EC,cAA0E,uEAAF,EAAE;;EAE1E,IAAI,CAACD,KAAD,IAAUA,KAAK,CAACE,UAAN,KAAqBF,KAAK,CAACG,gBAAzC,EAA2D;IACzD,OAAO,IAAP;EACD;;EACD,IAAMvB,MAAM,GAAGwB,mBAAmB,CAACJ,KAAD,EAAQC,cAAR,CAAlC;EAEA,IAAMI,OAAO,GAAGzB,MAAM,CAAC0B,UAAP,CAAkB,IAAlB,EAAwB;IAAEC,KAAK,EAAE;EAAT,CAAxB,CAAhB;;EACA,IAAI,CAACF,OAAD,IAAY,CAACzB,MAAM,CAACJ,KAApB,IAA6B,CAACI,MAAM,CAACF,MAAzC,EAAiD;IAC/C,OAAO,IAAP;EACD;;EAED,IAAM8B,SAAS,GAAGH,OAAO,CAACI,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B7B,MAAM,CAACJ,KAAlC,EAAyCI,MAAM,CAACF,MAAhD,CAAlB;EACA,OAAO8B,SAAP;AACD;AAED,OAAM,SAAUJ,mBAAV,CACJJ,KADI,QAEuF;EAAA,sBAAzFzB,KAAyF;EAAA,IAAzFA,KAAyF,2BAAjF,CAAiF;EAAA,8BAA9EqB,aAA8E;EAAA,IAA9EA,aAA8E,mCAA9D,KAA8D;EAE3F,IAAQvB,UAAR,GAAoC2B,KAApC,CAAQ3B,UAAR;EAAA,IAAoBC,WAApB,GAAoC0B,KAApC,CAAoB1B,WAApB;;EACA,oBAA0BF,YAAY,CAACC,UAAD,EAAaC,WAAb,EAA0BC,KAA1B,CAAtC;EAAA,IAAQC,KAAR,iBAAQA,KAAR;EAAA,IAAeE,MAAf,iBAAeA,MAAf;;EAGA,IAAME,MAAM,GAAG8B,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;EACA/B,MAAM,CAACJ,KAAP,GAAeA,KAAf;EACAI,MAAM,CAACF,MAAP,GAAgBA,MAAhB;EACA,IAAM2B,OAAO,GAAGzB,MAAM,CAAC0B,UAAP,CAAkB,IAAlB,EAAwB;IAAEC,KAAK,EAAE;EAAT,CAAxB,CAAhB;;EAEA,IAAI,CAACF,OAAL,EAAc;IAEZ,MAAM,IAAIO,KAAJ,CAAU,wBAAV,CAAN;EACD;;EAKD,IAAIhB,aAAJ,EAAmB;IACjBS,OAAO,CAACQ,YAAR,CAAqB,CAAC,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkCjC,MAAM,CAACJ,KAAzC,EAAgD,CAAhD;EACD;;EAED6B,OAAO,CAACS,SAAR,CAAkBd,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BxB,KAA/B,EAAsCE,MAAtC;EAEA,OAAOE,MAAP;AACD;AAED,OAAM,SAAUmC,YAAV,CACJf,KADI,EAEJC,cAFI,EAEgC;EAEpC,IAAMR,MAAM,GAAGD,0BAA0B,CAACS,cAAD,CAAzC;EACA,IAAMrB,MAAM,GAAGwB,mBAAmB,CAACJ,KAAD,EAAQP,MAAR,CAAlC;EACA,IAAQZ,SAAR,GAAiDY,MAAjD,CAAQZ,SAAR;EAAA,sBAAiDY,MAAjD,CAAmBX,OAAnB;EAAA,IAAmBA,OAAnB,gCAA6BgB,eAA7B;EACA,OAAOnB,SAAS,CAACC,MAAD,EAASC,SAAT,EAAqBC,OAArB,CAAhB;AACD;;AAED,SAASkC,uBAAT,GAAgC;EAC9B,IAAIC,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBF,uBAArD,EAA8E;IAC5E,OAAOC,SAAS,CAACC,YAAV,CAAuBF,uBAAvB,EAAP;EACD;;EACD,OAAO,IAAP;AACD;;AAED,OAAM,SAAUG,mBAAV,CACJ7B,mBADI,EAEJd,KAFI,EAGJE,MAHI,EAGgC;EAEpC,IAAM0C,oBAAoB,GAA2B;IACnDC,KAAK,EAAE,KAD4C;IAEnDrB,KAAK,EAAE;EAF4C,CAArD;;EAKA,IAAIX,mBAAmB,CAACC,mBAAD,EAAsBd,KAAtB,EAA6BE,MAA7B,CAAvB,EAA6D;IAC3D,OAAOR,kBAAP;EACD;;EAED,IAAMoD,QAAQ,GAAGN,uBAAuB,EAAxC;;EAEA,IAAI,CAACM,QAAD,IAAa,CAACA,QAAQ,CAACC,UAAvB,IAAqC,CAACD,QAAQ,CAAC9C,KAA/C,IAAwD,CAAC8C,QAAQ,CAAC5C,MAAtE,EAA8E;IAC5E,OAAOR,kBAAP;EACD;;EAED,IAAIoB,mBAAmB,IAAIP,MAAM,CAACC,MAAP,CAAcnB,UAAd,EAA0BoB,QAA1B,CAAmCK,mBAAnC,CAA3B,EAAoF;IAClF,IAAMiC,UAAU,GAAGvD,sBAAsB,CAACsB,mBAAD,CAAzC;;IACA,IAAIkC,QAAQ,EAAZ,EAAgB;MACd,IAAM3B,GAAG,GAAG0B,UAAU,KAAK,MAAf,GAAwB,OAAxB,GAAkC,OAA9C;MACCH,oBAAoB,CAACpB,KAArB,CAAqDuB,UAArD,uBACE1B,GADF,EACQ0B,UADR;IAGF,CALD,MAKO;MACJH,oBAAoB,CAACpB,KAArB,CAAqDuB,UAArD,GAAkE;QACjEE,KAAK,EAAEzD,sBAAsB,CAACsB,mBAAD;MADoC,CAAlE;IAGF;EACF;;EAED,IAAIoC,uBAAuB,CAACN,oBAAoB,CAACpB,KAAtB,CAA3B,EAAyD;IACvDoB,oBAAoB,CAACpB,KAArB,CAA2BxB,KAA3B,GAAmCA,KAAnC;IACA4C,oBAAoB,CAACpB,KAArB,CAA2BtB,MAA3B,GAAoCA,MAApC;EACD;;EAED,OAAO0C,oBAAP;AACD;;AAED,SAASM,uBAAT,CAAiCC,KAAjC,EAA2C;EACzC,OAAOA,KAAK,IAAI,OAAOA,KAAK,CAAC3B,KAAb,KAAuB,SAAvC;AACD;;AASD,OAAO,SAAe4B,wBAAf,CACLtC,mBADK,EAELuC,cAFK,EAGLC,eAHK;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAMUC,eAAe,CAACzC,mBAAD,EAAsBuC,cAAtB,EAAsCC,eAAtC,CANzB;;QAAA;UAAA;;QAAA;UAAA;UAAA;;UAAA,MAUC,uBAAiBE,oBAAjB,IAAyC,YAAMC,UAAN,KAAqB,YAV/D;YAAA;YAAA;UAAA;;UAWKC,cAXL,GAYC5C,mBAAmB,KAAKzB,UAAU,CAACsE,IAAnC,GAA0CtE,UAAU,CAACuE,KAArD,GAA6DvE,UAAU,CAACsE,IAZzE;UAAA;UAAA,iCAaYJ,eAAe,CAACG,cAAD,EAAiBL,cAAjB,EAAiCC,eAAjC,CAb3B;;QAAA;UAAA;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAmBP,OAAO,SAAeC,eAAf,CACLzC,mBADK,EAELuC,cAFK,EAGLC,eAHK;EAAA;EAAA;IAAA;MAAA;QAAA;UAKCO,WALD,GAKuClB,mBAAmB,CAC7D7B,mBAD6D,EAE7DuC,cAF6D,EAG7DC,eAH6D,CAL1D;UAAA;UAAA,iCAU6B3D,qBAAqB,CAACkE,WAAD,CAVlD;;QAAA;UAUCC,MAVD;UAAA,kCAWEA,MAXF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAcP,OAAM,SAAUd,QAAV,GAAkB;EACtB,OAAO,SAASe,IAAT,CAActB,SAAS,CAACuB,SAAxB,KAAsC,CAAC,MAAMD,IAAN,CAAWtB,SAAS,CAACuB,SAArB,CAA9C;AACD;AAED,OAAM,SAAUC,cAAV,CAAyBC,CAAzB,EAAgDC,CAAhD,EAAqE;EACzE,IAAI,CAACD,CAAD,IAAM,CAACC,CAAX,EAAc;IACZ,OAAO,KAAP;EACD;;EACD,IAAMC,SAAS,GAAGF,CAAC,CAACG,SAAF,GAAc,CAAd,EAAiBC,WAAjB,EAAlB;EACA,IAAMC,SAAS,GAAGJ,CAAC,CAACE,SAAF,GAAc,CAAd,EAAiBC,WAAjB,EAAlB;EACA,OAAOF,SAAS,CAACI,QAAV,KAAuBD,SAAS,CAACC,QAAxC;AACD;AAED,OAAM,SAAUC,OAAV,CACJjD,KADI,EAEJkD,QAFI,EAGJzD,MAHI,EAGwB;EAE5B,IAAM0D,MAAM,GAAGpC,YAAY,CAACf,KAAD,EAAQP,MAAR,CAA3B;EAEA,IAAM2D,eAAe,GAAoB;IACvCC,GAAG,EAAEF,MADkC;IAEvCA,MAAM,EAANA,MAFuC;IAGvC3E,KAAK,EAAE,CAHgC;IAIvCE,MAAM,EAAE;EAJ+B,CAAzC;;EAOA,IAAIwE,QAAJ,EAAc;IACZ,sBAAkCA,QAAlC,CAAQ1E,KAAR;IAAA,IAAQA,KAAR,gCAAgB,CAAhB;IAAA,uBAAkC0E,QAAlC,CAAmBxE,MAAnB;IAAA,IAAmBA,MAAnB,iCAA4B,CAA5B;IACA0E,eAAe,CAAC5E,KAAhB,GAAwBA,KAAxB;IACA4E,eAAe,CAAC1E,MAAhB,GAAyBA,MAAzB;IACA0E,eAAe,CAACE,IAAhB,GAAuBJ,QAAvB;EACD;;EAED,IAAIzD,MAAM,CAAC8D,cAAX,EAA2B;IACzB9D,MAAM,CAAC8D,cAAP,CAAsBH,eAAtB;EACD;;EACD,OAAOA,eAAP;AACD;AAED,OAAO,SAAeI,qBAAf,CACLC,UADK,EAELnB,MAFK;EAAA;EAAA;EAAA;IAAA;MAAA;QAAA;UAGLY,QAHK,8DAGyB,EAHzB;;UAAA,MAKDZ,MALC,YAKDA,MAAM,CAAEoB,cALP;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAMGC,OAAO,CAACC,GAAR,CACJtB,MAAM,CAACoB,cAAP,GAAwBG,GAAxB,CAA4B,UAACC,KAAD;YAAA,OAAWC,mBAAmB,CAACN,UAAD,EAAaK,KAAb,EAAoBZ,QAApB,CAA9B;UAAA,CAA5B,CADI,CANH;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAaP,SAAea,mBAAf,CACEN,UADF,EAEEK,KAFF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA,IA6BWE,iCA7BX;EAAA;;EAAA;IAAA;MAAA;QAAA;UA6BWA,iCA7BX,kCA8BIC,aA9BJ,EA+BIC,WA/BJ,EAgCIC,SAhCJ,EAgCoD;YAEhD,IAAMC,gBAAgB,GAAGD,SAAS,CAACjB,QAAQ,CAACgB,WAAD,CAAT,CAAlC;YACA,OAAOG,yBAAyB,CAAC;cAC/BJ,aAAa,EAAbA,aAD+B;cAE/BC,WAAW,EAAXA,WAF+B;cAG/BE,gBAAgB,EAAhBA,gBAH+B;cAI/BE,YAAY,EAAZA,YAJ+B;cAK/BpB,QAAQ,EAARA,QAL+B;cAM/BO,UAAU,EAAVA;YAN+B,CAAD,CAAhC;UAQD,CA3CH;;UAGEP,QAHF,8DAGgC,EAHhC;UAKQoB,YALR,GAKuBR,KAAK,CAACS,eAAN,EALvB;UAQQlC,WARR,GAQ+C,EAR/C;UAWQmC,aAXR,GAWwB,CACpB,sBADoB,EAEpB,kBAFoB,EAGpB,KAHoB,EAIpB,YAJoB,EAKpB,UALoB,EAMpB,YANoB,EAOpB,WAPoB,EAQpB,eARoB,EASpB,MAToB,CAXxB;;UAuBE,8BAAuBA,aAAvB,oCAAsC;YAA3BC,QAA2B;;YACpC,IAAIH,YAAY,CAACG,QAAD,CAAhB,EAA4B;cAC1BpC,WAAW,CAACoC,QAAD,CAAX,GAAwBC,wBAAwB,CAACJ,YAAY,CAACG,QAAD,CAAb,EAAyBvB,QAAQ,CAACuB,QAAD,CAAjC,CAAhD;YACD;UACF;;UAkBD,IAAIH,YAAY,CAACK,SAAb,IAA0BzB,QAAQ,CAAC0B,SAAT,KAAuBrF,SAArD,EAAgE;YAC9D8C,WAAW,CAACsC,SAAZ,GAAwBX,iCAAiC,CACvD,WADuD,EAEvD,WAFuD,EAGvDjG,eAAe,CAAC8G,4BAHuC,CAAzD;UAKD;;UAED,IAAIP,YAAY,CAACQ,KAAb,IAAsB5B,QAAQ,CAAC6B,SAAT,KAAuBxF,SAAjD,EAA4D;YAC1D8C,WAAW,CAACyC,KAAZ,GAAoBd,iCAAiC,CACnD,OADmD,EAEnD,WAFmD,EAGnDjG,eAAe,CAACiH,4BAHmC,CAArD;UAKD;;UAED,IAAIV,YAAY,CAACW,gBAAb,IAAiC/B,QAAQ,CAACgC,YAAT,KAA0B3F,SAA/D,EAA0E;YACxE8C,WAAW,CAAC4C,gBAAZ,GAA+BjB,iCAAiC,CAE9D,kBAF8D,EAE1C,cAF0C,EAE1BjG,eAAe,CAACoH,+BAFU,CAAhE;UAGD;;UAjEH;UAAA;UAAA,iCAoEUrB,KAAK,CAACsB,gBAAN,CAAuB;YAAEC,QAAQ,EAAE,CAAChD,WAAD;UAAZ,CAAvB,CApEV;;QAAA;UAAA;UAAA;;QAAA;UAAA;UAAA;UAsEI,IAAIiD,OAAJ,EAAaC,OAAO,CAACC,IAAR,CAAa,6BAAb;;QAtEjB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AA0EA,OAAM,SAAUC,eAAV,CAA0BnD,MAA1B,EAAoD;EACxD,IAAI,CAACA,MAAL,EAAa;IACX;EACD;;EACD,IAAIA,MAAM,CAACoD,cAAX,EAA2B;IACzBpD,MAAM,CAACoD,cAAP,GAAwBC,OAAxB,CAAgC,UAAC7B,KAAD;MAAA,OAAWA,KAAK,CAAC8B,IAAN,EAAX;IAAA,CAAhC;EACD;;EACD,IAAItD,MAAM,CAACoB,cAAX,EAA2B;IACzBpB,MAAM,CAACoB,cAAP,GAAwBiC,OAAxB,CAAgC,UAAC7B,KAAD;MAAA,OAAWA,KAAK,CAAC8B,IAAN,EAAX;IAAA,CAAhC;EACD;;EACD,IAAIC,kBAAkB,CAACvD,MAAD,CAAtB,EAAgC;IAC9BA,MAAM,CAACsD,IAAP;EACD;AACF;AAED,OAAM,SAAUE,cAAV,CACJ9F,KADI,EAEJsC,MAFI,EAE2C;EAAA;;EAE/C,IAAMyD,eAAe,4BAAGC,MAAM,CAACC,GAAP,CAAWF,eAAd,oCAAiCC,MAAM,CAACE,SAAP,CAAiBH,eAAvE;;EAEA,IAAI,OAAO/F,KAAK,CAACmG,SAAb,KAA2B,WAA/B,EAA4C;IAC1CnG,KAAK,CAACmG,SAAN,GAAkB7D,MAAlB;EACD,CAFD,MAEO,IAAI,OAAQtC,KAAa,CAACoG,YAAtB,KAAuC,WAA3C,EAAwD;IAC5DpG,KAAa,CAACoG,YAAd,GAA6B9D,MAA7B;EACF,CAFM,MAEA,IAAIA,MAAM,IAAIyD,eAAd,EAA+B;IACpC/F,KAAK,CAACqG,GAAN,GAAYN,eAAe,CAACzD,MAAD,CAA3B;EACD;;EAED,IAAI,CAACA,MAAL,EAAa;IAAA;;IACX,IAAMgE,eAAe,4BAAGN,MAAM,CAACC,GAAP,CAAWK,eAAd,oCAAiCN,MAAM,CAACE,SAAP,CAAiBI,eAAvE;IACA,IAAMC,MAAM,0BAAGvG,KAAK,CAACqG,GAAT,yBAAgBrG,KAAK,CAACmG,SAAtB,oBAAoCnG,KAAa,CAACoG,YAA9D;;IACA,IAAIE,eAAe,IAAI,OAAOC,MAAP,KAAkB,QAAzC,EAAmD;MACjDD,eAAe,CAACC,MAAD,CAAf;IACD;EACF;AACF;AAED,OAAM,SAAUC,qBAAV,CAAgCxG,KAAhC,EAAyDyG,OAAzD,EAAwE;EAC5E,IAAMnE,MAAM,GAAGtC,KAAK,CAACmG,SAArB;;EAEA,IAAI7D,MAAM,YAAYoE,WAAtB,EAAmC;IAAA;;IACjC,IAAMC,UAAU,GAAGrE,MAAM,CAACoB,cAAP,GAAwB,CAAxB,CAAnB;IACA,OAAOiD,UAAU,CAACpC,eAAlB,6CAAOoC,UAAU,CAACpC,eAAX,EAAP,qBAAO,sBAAiCkC,OAAjC,CAAP;EACD;;EAED,OAAO,KAAP;AACD;;AAED,SAASZ,kBAAT,CAA4BlE,KAA5B,EAAsC;EACpC,OAAO,OAAOA,KAAK,CAACiE,IAAb,KAAsB,UAA7B;AACD;;AAED,SAASlB,wBAAT,CAAkCkC,KAAlC,EAA6DC,KAA7D,EAA2E;EACzE,IAAI,CAACA,KAAL,EAAY;IACV;EACD;;EAED,IAAMC,SAAS,GAAGC,YAAY,CAACF,KAAD,EAAQ,CAACD,KAAK,CAACI,GAAP,EAAYJ,KAAK,CAACK,GAAlB,CAAR,CAA9B;EAEA,OAAOC,IAAI,CAACF,GAAL,CAASJ,KAAK,CAACK,GAAf,EAAoBC,IAAI,CAACD,GAAL,CAASL,KAAK,CAACI,GAAf,EAAoBF,SAApB,CAApB,CAAP;AACD;;AAED,SAASC,YAAT,CAAsBF,KAAtB,EAAqCM,EAArC,EAAwE;EAAA,IAArBC,EAAqB,uEAAN,CAAC,CAAD,EAAI,CAAJ,CAAM;EACtE,OAAQ,CAACP,KAAK,GAAGO,EAAE,CAAC,CAAD,CAAX,KAAmBD,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAA7B,CAAD,IAAuCC,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAAjD,IAAwDD,EAAE,CAAC,CAAD,CAAjE;AACD;;AAED,SAAS9C,yBAAT,CAAsCgD,KAAtC,EAOC;EACC,IAAQpD,aAAR,GACEoD,KADF,CAAQpD,aAAR;EAAA,IAAuBC,WAAvB,GACEmD,KADF,CAAuBnD,WAAvB;EAAA,IAAoCE,gBAApC,GACEiD,KADF,CAAoCjD,gBAApC;EAAA,IAAsDE,YAAtD,GACE+C,KADF,CAAsD/C,YAAtD;EAAA,IAAoEpB,QAApE,GACEmE,KADF,CAAoEnE,QAApE;EAAA,IAA8EO,UAA9E,GACE4D,KADF,CAA8E5D,UAA9E;EAEA,IAAM6D,OAAO,GAAGpE,QAAQ,CAACgB,WAAD,CAAxB;;EACA,IACEqD,KAAK,CAACC,OAAN,CAAclD,YAAY,CAACL,aAAD,CAA1B,KACAG,gBADA,IAEA,CAACE,YAAY,CAACL,aAAD,CAAZ,CAA4BhF,QAA5B,CAAqCmF,gBAArC,CAHH,EAIE;IACA,IAAIkB,OAAJ,EAAa;MAEXC,OAAO,CAACC,IAAR,SACQtB,WADR,YACyBoD,OADzB,6BACsDlD,gBADtD,8DAC6HX,UAD7H;IAGD;;IACD,OAAOlE,SAAP;EACD;;EACD,OAAO6E,gBAAP;AACD","names":["invariant","CameraType","ImageType","CapabilityUtils","CameraTypeToFacingMode","ImageTypeFormat","MinimumConstraints","requestUserMediaAsync","getImageSize","videoWidth","videoHeight","scale","width","ratio","height","toDataURL","canvas","imageType","quality","Object","values","includes","join","format","jpg","hasValidConstraints","preferredCameraType","undefined","ensureCameraPictureOptions","config","captureOptions","png","isImageMirror","key","DEFAULT_QUALITY","captureImageData","video","pictureOptions","readyState","HAVE_ENOUGH_DATA","captureImageContext","context","getContext","alpha","imageData","getImageData","document","createElement","Error","setTransform","drawImage","captureImage","getSupportedConstraints","navigator","mediaDevices","getIdealConstraints","preferredConstraints","audio","supports","facingMode","isWebKit","ideal","isMediaTrackConstraints","input","getPreferredStreamDevice","preferredWidth","preferredHeight","getStreamDevice","OverconstrainedError","constraint","nextCameraType","back","front","constraints","stream","test","userAgent","compareStreams","a","b","settingsA","getTracks","getSettings","settingsB","deviceId","capture","settings","base64","capturedPicture","uri","exif","onPictureSaved","syncTrackCapabilities","cameraType","getVideoTracks","Promise","all","map","track","onCapabilitiesReady","validatedInternalConstrainedValue","constraintKey","settingsKey","converter","convertedSetting","validatedConstrainedValue","capabilities","getCapabilities","clampedValues","property","convertNormalizedSetting","focusMode","autoFocus","convertAutoFocusJSONToNative","torch","flashMode","convertFlashModeJSONToNative","whiteBalanceMode","whiteBalance","convertWhiteBalanceJSONToNative","applyConstraints","advanced","__DEV__","console","warn","stopMediaStream","getAudioTracks","forEach","stop","isMediaStreamTrack","setVideoSource","createObjectURL","window","URL","webkitURL","srcObject","mozSrcObject","src","revokeObjectURL","source","isCapabilityAvailable","keyName","MediaStream","videoTrack","range","value","converted","convertRange","min","max","Math","r2","r1","props","setting","Array","isArray"],"sourceRoot":"","sources":["../src/WebCameraUtils.ts"],"sourcesContent":["/* eslint-env browser */\nimport invariant from 'invariant';\n\nimport {\n  CameraType,\n  CapturedPicture,\n  ImageSize,\n  ImageType,\n  WebCameraSettings,\n  CameraPictureOptions,\n} from './Camera.types';\nimport * as CapabilityUtils from './WebCapabilityUtils';\nimport { CameraTypeToFacingMode, ImageTypeFormat, MinimumConstraints } from './WebConstants';\nimport { requestUserMediaAsync } from './WebUserMediaManager';\n\ninterface ConstrainLongRange {\n  max?: number;\n  min?: number;\n  exact?: number;\n  ideal?: number;\n}\n\nexport function getImageSize(videoWidth: number, videoHeight: number, scale: number): ImageSize {\n  const width = videoWidth * scale;\n  const ratio = videoWidth / width;\n  const height = videoHeight / ratio;\n\n  return {\n    width,\n    height,\n  };\n}\n\nexport function toDataURL(\n  canvas: HTMLCanvasElement,\n  imageType: ImageType,\n  quality: number\n): string {\n  invariant(\n    Object.values(ImageType).includes(imageType),\n    `expo-camera: ${imageType} is not a valid ImageType. Expected a string from: ${Object.values(\n      ImageType\n    ).join(', ')}`\n  );\n\n  const format = ImageTypeFormat[imageType];\n  if (imageType === ImageType.jpg) {\n    invariant(\n      quality <= 1 && quality >= 0,\n      `expo-camera: ${quality} is not a valid image quality. Expected a number from 0...1`\n    );\n    return canvas.toDataURL(format, quality);\n  } else {\n    return canvas.toDataURL(format);\n  }\n}\n\nexport function hasValidConstraints(\n  preferredCameraType?: CameraType,\n  width?: number | ConstrainLongRange,\n  height?: number | ConstrainLongRange\n): boolean {\n  return preferredCameraType !== undefined && width !== undefined && height !== undefined;\n}\n\nfunction ensureCameraPictureOptions(config: CameraPictureOptions): CameraPictureOptions {\n  const captureOptions = {\n    scale: 1,\n    imageType: ImageType.png,\n    isImageMirror: false,\n  };\n\n  for (const key in config) {\n    if (key in config && config[key] !== undefined && key in captureOptions) {\n      captureOptions[key] = config[key];\n    }\n  }\n  return captureOptions;\n}\n\nconst DEFAULT_QUALITY = 0.92;\n\nexport function captureImageData(\n  video: HTMLVideoElement | null,\n  pictureOptions: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'> = {}\n): ImageData | null {\n  if (!video || video.readyState !== video.HAVE_ENOUGH_DATA) {\n    return null;\n  }\n  const canvas = captureImageContext(video, pictureOptions);\n\n  const context = canvas.getContext('2d', { alpha: false });\n  if (!context || !canvas.width || !canvas.height) {\n    return null;\n  }\n\n  const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n  return imageData;\n}\n\nexport function captureImageContext(\n  video: HTMLVideoElement,\n  { scale = 1, isImageMirror = false }: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'>\n): HTMLCanvasElement {\n  const { videoWidth, videoHeight } = video;\n  const { width, height } = getImageSize(videoWidth, videoHeight, scale!);\n\n  // Build the canvas size and draw the camera image to the context from video\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const context = canvas.getContext('2d', { alpha: false });\n\n  if (!context) {\n    // Should never be called\n    throw new Error('Context is not defined');\n  }\n  // sharp image details\n  // context.imageSmoothingEnabled = false;\n\n  // Flip horizontally (as css transform: rotateY(180deg))\n  if (isImageMirror) {\n    context.setTransform(-1, 0, 0, 1, canvas.width, 0);\n  }\n\n  context.drawImage(video, 0, 0, width, height);\n\n  return canvas;\n}\n\nexport function captureImage(\n  video: HTMLVideoElement,\n  pictureOptions: CameraPictureOptions\n): string {\n  const config = ensureCameraPictureOptions(pictureOptions);\n  const canvas = captureImageContext(video, config);\n  const { imageType, quality = DEFAULT_QUALITY } = config;\n  return toDataURL(canvas, imageType!, quality);\n}\n\nfunction getSupportedConstraints(): MediaTrackSupportedConstraints | null {\n  if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n    return navigator.mediaDevices.getSupportedConstraints();\n  }\n  return null;\n}\n\nexport function getIdealConstraints(\n  preferredCameraType: CameraType,\n  width?: number | ConstrainLongRange,\n  height?: number | ConstrainLongRange\n): MediaStreamConstraints {\n  const preferredConstraints: MediaStreamConstraints = {\n    audio: false,\n    video: {},\n  };\n\n  if (hasValidConstraints(preferredCameraType, width, height)) {\n    return MinimumConstraints;\n  }\n\n  const supports = getSupportedConstraints();\n  // TODO(Bacon): Test this\n  if (!supports || !supports.facingMode || !supports.width || !supports.height) {\n    return MinimumConstraints;\n  }\n\n  if (preferredCameraType && Object.values(CameraType).includes(preferredCameraType)) {\n    const facingMode = CameraTypeToFacingMode[preferredCameraType];\n    if (isWebKit()) {\n      const key = facingMode === 'user' ? 'exact' : 'ideal';\n      (preferredConstraints.video as MediaTrackConstraints).facingMode = {\n        [key]: facingMode,\n      };\n    } else {\n      (preferredConstraints.video as MediaTrackConstraints).facingMode = {\n        ideal: CameraTypeToFacingMode[preferredCameraType],\n      };\n    }\n  }\n\n  if (isMediaTrackConstraints(preferredConstraints.video)) {\n    preferredConstraints.video.width = width;\n    preferredConstraints.video.height = height;\n  }\n\n  return preferredConstraints;\n}\n\nfunction isMediaTrackConstraints(input: any): input is MediaTrackConstraints {\n  return input && typeof input.video !== 'boolean';\n}\n\n/**\n * Invoke getStreamDevice a second time with the opposing camera type if the preferred type cannot be retrieved.\n *\n * @param preferredCameraType\n * @param preferredWidth\n * @param preferredHeight\n */\nexport async function getPreferredStreamDevice(\n  preferredCameraType: CameraType,\n  preferredWidth?: number | ConstrainLongRange,\n  preferredHeight?: number | ConstrainLongRange\n): Promise<MediaStream> {\n  try {\n    return await getStreamDevice(preferredCameraType, preferredWidth, preferredHeight);\n  } catch (error) {\n    // A hack on desktop browsers to ensure any camera is used.\n    // eslint-disable-next-line no-undef\n    if (error instanceof OverconstrainedError && error.constraint === 'facingMode') {\n      const nextCameraType =\n        preferredCameraType === CameraType.back ? CameraType.front : CameraType.back;\n      return await getStreamDevice(nextCameraType, preferredWidth, preferredHeight);\n    }\n    throw error;\n  }\n}\n\nexport async function getStreamDevice(\n  preferredCameraType: CameraType,\n  preferredWidth?: number | ConstrainLongRange,\n  preferredHeight?: number | ConstrainLongRange\n): Promise<MediaStream> {\n  const constraints: MediaStreamConstraints = getIdealConstraints(\n    preferredCameraType,\n    preferredWidth,\n    preferredHeight\n  );\n  const stream: MediaStream = await requestUserMediaAsync(constraints);\n  return stream;\n}\n\nexport function isWebKit(): boolean {\n  return /WebKit/.test(navigator.userAgent) && !/Edg/.test(navigator.userAgent);\n}\n\nexport function compareStreams(a: MediaStream | null, b: MediaStream | null): boolean {\n  if (!a || !b) {\n    return false;\n  }\n  const settingsA = a.getTracks()[0].getSettings();\n  const settingsB = b.getTracks()[0].getSettings();\n  return settingsA.deviceId === settingsB.deviceId;\n}\n\nexport function capture(\n  video: HTMLVideoElement,\n  settings: MediaTrackSettings,\n  config: CameraPictureOptions\n): CapturedPicture {\n  const base64 = captureImage(video, config);\n\n  const capturedPicture: CapturedPicture = {\n    uri: base64,\n    base64,\n    width: 0,\n    height: 0,\n  };\n\n  if (settings) {\n    const { width = 0, height = 0 } = settings;\n    capturedPicture.width = width;\n    capturedPicture.height = height;\n    capturedPicture.exif = settings;\n  }\n\n  if (config.onPictureSaved) {\n    config.onPictureSaved(capturedPicture);\n  }\n  return capturedPicture;\n}\n\nexport async function syncTrackCapabilities(\n  cameraType: CameraType,\n  stream: MediaStream | null,\n  settings: WebCameraSettings = {}\n): Promise<void> {\n  if (stream?.getVideoTracks) {\n    await Promise.all(\n      stream.getVideoTracks().map((track) => onCapabilitiesReady(cameraType, track, settings))\n    );\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\nasync function onCapabilitiesReady(\n  cameraType: CameraType,\n  track: MediaStreamTrack,\n  settings: WebCameraSettings = {}\n): Promise<void> {\n  const capabilities = track.getCapabilities();\n\n  // Create an empty object because if you set a constraint that isn't available an error will be thrown.\n  const constraints: MediaTrackConstraintSet = {};\n\n  // TODO(Bacon): Add `pointsOfInterest` support\n  const clampedValues = [\n    'exposureCompensation',\n    'colorTemperature',\n    'iso',\n    'brightness',\n    'contrast',\n    'saturation',\n    'sharpness',\n    'focusDistance',\n    'zoom',\n  ];\n\n  for (const property of clampedValues) {\n    if (capabilities[property]) {\n      constraints[property] = convertNormalizedSetting(capabilities[property], settings[property]);\n    }\n  }\n\n  function validatedInternalConstrainedValue<IConvertedType>(\n    constraintKey: string,\n    settingsKey: string,\n    converter: (settingValue: any) => IConvertedType\n  ) {\n    const convertedSetting = converter(settings[settingsKey]);\n    return validatedConstrainedValue({\n      constraintKey,\n      settingsKey,\n      convertedSetting,\n      capabilities,\n      settings,\n      cameraType,\n    });\n  }\n\n  if (capabilities.focusMode && settings.autoFocus !== undefined) {\n    constraints.focusMode = validatedInternalConstrainedValue<MediaTrackConstraintSet['focusMode']>(\n      'focusMode',\n      'autoFocus',\n      CapabilityUtils.convertAutoFocusJSONToNative\n    );\n  }\n\n  if (capabilities.torch && settings.flashMode !== undefined) {\n    constraints.torch = validatedInternalConstrainedValue<MediaTrackConstraintSet['torch']>(\n      'torch',\n      'flashMode',\n      CapabilityUtils.convertFlashModeJSONToNative\n    );\n  }\n\n  if (capabilities.whiteBalanceMode && settings.whiteBalance !== undefined) {\n    constraints.whiteBalanceMode = validatedInternalConstrainedValue<\n      MediaTrackConstraintSet['whiteBalanceMode']\n    >('whiteBalanceMode', 'whiteBalance', CapabilityUtils.convertWhiteBalanceJSONToNative);\n  }\n\n  try {\n    await track.applyConstraints({ advanced: [constraints] });\n  } catch (error) {\n    if (__DEV__) console.warn('Failed to apply constraints', error);\n  }\n}\n\nexport function stopMediaStream(stream: MediaStream | null) {\n  if (!stream) {\n    return;\n  }\n  if (stream.getAudioTracks) {\n    stream.getAudioTracks().forEach((track) => track.stop());\n  }\n  if (stream.getVideoTracks) {\n    stream.getVideoTracks().forEach((track) => track.stop());\n  }\n  if (isMediaStreamTrack(stream)) {\n    stream.stop();\n  }\n}\n\nexport function setVideoSource(\n  video: HTMLVideoElement,\n  stream: MediaStream | MediaSource | Blob | null\n): void {\n  const createObjectURL = window.URL.createObjectURL ?? window.webkitURL.createObjectURL;\n\n  if (typeof video.srcObject !== 'undefined') {\n    video.srcObject = stream;\n  } else if (typeof (video as any).mozSrcObject !== 'undefined') {\n    (video as any).mozSrcObject = stream;\n  } else if (stream && createObjectURL) {\n    video.src = createObjectURL(stream);\n  }\n\n  if (!stream) {\n    const revokeObjectURL = window.URL.revokeObjectURL ?? window.webkitURL.revokeObjectURL;\n    const source = video.src ?? video.srcObject ?? (video as any).mozSrcObject;\n    if (revokeObjectURL && typeof source === 'string') {\n      revokeObjectURL(source);\n    }\n  }\n}\n\nexport function isCapabilityAvailable(video: HTMLVideoElement, keyName: string): boolean {\n  const stream = video.srcObject;\n\n  if (stream instanceof MediaStream) {\n    const videoTrack = stream.getVideoTracks()[0];\n    return videoTrack.getCapabilities?.()?.[keyName];\n  }\n\n  return false;\n}\n\nfunction isMediaStreamTrack(input: any): input is MediaStreamTrack {\n  return typeof input.stop === 'function';\n}\n\nfunction convertNormalizedSetting(range: MediaSettingsRange, value?: number): number | undefined {\n  if (!value) {\n    return;\n  }\n  // convert the normalized incoming setting to the native camera zoom range\n  const converted = convertRange(value, [range.min, range.max]);\n  // clamp value so we don't get an error\n  return Math.min(range.max, Math.max(range.min, converted));\n}\n\nfunction convertRange(value: number, r2: number[], r1: number[] = [0, 1]): number {\n  return ((value - r1[0]) * (r2[1] - r2[0])) / (r1[1] - r1[0]) + r2[0];\n}\n\nfunction validatedConstrainedValue<T>(props: {\n  constraintKey: string;\n  settingsKey: string;\n  convertedSetting: T;\n  capabilities: MediaTrackCapabilities;\n  settings: WebCameraSettings;\n  cameraType: string;\n}): T | undefined {\n  const { constraintKey, settingsKey, convertedSetting, capabilities, settings, cameraType } =\n    props;\n  const setting = settings[settingsKey];\n  if (\n    Array.isArray(capabilities[constraintKey]) &&\n    convertedSetting &&\n    !capabilities[constraintKey].includes(convertedSetting)\n  ) {\n    if (__DEV__) {\n      // Only warn in dev mode.\n      console.warn(\n        ` { ${settingsKey}: \"${setting}\" } (converted to \"${convertedSetting}\" in the browser) is not supported for camera type \"${cameraType}\" in your browser. Using the default value instead.`\n      );\n    }\n    return undefined;\n  }\n  return convertedSetting;\n}\n"]},"metadata":{},"sourceType":"module"}