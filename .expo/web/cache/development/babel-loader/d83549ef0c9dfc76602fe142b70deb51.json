{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ExponentAV from \"../ExponentAV\";\nvar _enabled = true;\nexport function isAudioEnabled() {\n  return _enabled;\n}\nexport function throwIfAudioIsDisabled() {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\nexport function setIsEnabledAsync(value) {\n  return _regeneratorRuntime.async(function setIsEnabledAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _enabled = value;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ExponentAV.setAudioIsEnabled(value));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":";AAAA,OAAOA,UAAP;AAEA,IAAIC,QAAQ,GAAG,IAAf;AAEA,OAAM,SAAUC,cAAV,GAAwB;EAC5B,OAAOD,QAAP;AACD;AAED,OAAM,SAAUE,sBAAV,GAAgC;EACpC,IAAI,CAACF,QAAL,EAAe;IACb,MAAM,IAAIG,KAAJ,CAAU,yDAAV,CAAN;EACD;AACF;AAED,OAAO,SAAeC,iBAAf,CAAiCC,KAAjC;EAAA;IAAA;MAAA;QAAA;UACLL,QAAQ,GAAGK,KAAX;UADK;UAAA,iCAECN,UAAU,CAACO,iBAAX,CAA6BD,KAA7B,CAFD;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","names":["ExponentAV","_enabled","isAudioEnabled","throwIfAudioIsDisabled","Error","setIsEnabledAsync","value","setAudioIsEnabled"],"sourceRoot":"","sources":["../../src/Audio/AudioAvailability.ts"],"sourcesContent":["import ExponentAV from '../ExponentAV';\n\nlet _enabled = true;\n\nexport function isAudioEnabled(): boolean {\n  return _enabled;\n}\n\nexport function throwIfAudioIsDisabled(): void {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\n\nexport async function setIsEnabledAsync(value: boolean): Promise<void> {\n  _enabled = value;\n  await ExponentAV.setAudioIsEnabled(value);\n  // TODO : We immediately pause all players when disabled, but we do not resume all shouldPlay\n  // players when enabled. Perhaps for completeness we should allow this; the design of the\n  // enabling API is for people to enable / disable this audio library, but I think that it should\n  // intuitively also double as a global pause/resume.\n}\n"]},"metadata":{},"sourceType":"module"}