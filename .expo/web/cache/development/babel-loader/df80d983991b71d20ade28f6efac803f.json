{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Platform } from 'expo-modules-core';\nexport var userMediaRequested = false;\nexport var mountedInstances = [];\n\nfunction requestLegacyUserMediaAsync(props) {\n  var optionalSource, constraintToSourceId, sources, audioSource, videoSource, audioSourceId, videoSourceId;\n  return _regeneratorRuntime.async(function requestLegacyUserMediaAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          optionalSource = function optionalSource(id) {\n            return {\n              optional: [{\n                sourceId: id\n              }]\n            };\n          };\n\n          constraintToSourceId = function constraintToSourceId(constraint) {\n            var deviceId = constraint.deviceId;\n\n            if (typeof deviceId === 'string') {\n              return deviceId;\n            }\n\n            if (Array.isArray(deviceId) && deviceId.length > 0) {\n              return deviceId[0];\n            }\n\n            if (typeof deviceId === 'object' && deviceId.ideal) {\n              return deviceId.ideal;\n            }\n\n            return null;\n          };\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n            return MediaStreamTrack.getSources(function (sources) {\n              return resolve(sources);\n            });\n          }));\n\n        case 4:\n          sources = _context.sent;\n          audioSource = null;\n          videoSource = null;\n          sources.forEach(function (source) {\n            if (source.kind === 'audio') {\n              audioSource = source.id;\n            } else if (source.kind === 'video') {\n              videoSource = source.id;\n            }\n          });\n          audioSourceId = constraintToSourceId(props.audioConstraints);\n\n          if (audioSourceId) {\n            audioSource = audioSourceId;\n          }\n\n          videoSourceId = constraintToSourceId(props.videoConstraints);\n\n          if (videoSourceId) {\n            videoSource = videoSourceId;\n          }\n\n          return _context.abrupt(\"return\", [optionalSource(audioSource), optionalSource(videoSource)]);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sourceSelectedAsync(isMuted, audioConstraints, videoConstraints) {\n  var constraints;\n  return _regeneratorRuntime.async(function sourceSelectedAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          constraints = {\n            video: typeof videoConstraints !== 'undefined' ? videoConstraints : true\n          };\n\n          if (!isMuted) {\n            constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n          }\n\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(getAnyUserMediaAsync(constraints));\n\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function requestUserMediaAsync(props) {\n  var isMuted,\n      _await$requestLegacyU,\n      _await$requestLegacyU2,\n      audio,\n      video,\n      _args3 = arguments;\n\n  return _regeneratorRuntime.async(function requestUserMediaAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          isMuted = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : true;\n\n          if (!canGetUserMedia()) {\n            _context3.next = 5;\n            break;\n          }\n\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(sourceSelectedAsync(isMuted, props.audio, props.video));\n\n        case 4:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 5:\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(requestLegacyUserMediaAsync(props));\n\n        case 7:\n          _await$requestLegacyU = _context3.sent;\n          _await$requestLegacyU2 = _slicedToArray(_await$requestLegacyU, 2);\n          audio = _await$requestLegacyU2[0];\n          video = _await$requestLegacyU2[1];\n          _context3.next = 13;\n          return _regeneratorRuntime.awrap(sourceSelectedAsync(isMuted, audio, video));\n\n        case 13:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getAnyUserMediaAsync(constraints) {\n  var ignoreConstraints,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function getAnyUserMediaAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          ignoreConstraints = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(getUserMediaAsync(_objectSpread(_objectSpread({}, constraints), {}, {\n            video: ignoreConstraints || constraints.video\n          })));\n\n        case 4:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](1);\n\n          if (!(!ignoreConstraints && _context4.t0.name === 'ConstraintNotSatisfiedError')) {\n            _context4.next = 13;\n            break;\n          }\n\n          _context4.next = 12;\n          return _regeneratorRuntime.awrap(getAnyUserMediaAsync(constraints, true));\n\n        case 12:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 13:\n          throw _context4.t0;\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[1, 7]], Promise);\n}\nexport function getUserMediaAsync(constraints) {\n  var _getUserMedia;\n\n  return _regeneratorRuntime.async(function getUserMediaAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\n            _context5.next = 2;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", navigator.mediaDevices.getUserMedia(constraints));\n\n        case 2:\n          _getUserMedia = navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'];\n          return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n            return _getUserMedia.call(navigator, constraints, resolve, reject);\n          }));\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function canGetUserMedia() {\n  return Platform.isDOMAvailable && !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia || navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia']);\n}\nexport function isFrontCameraAvailableAsync(devices) {\n  return _regeneratorRuntime.async(function isFrontCameraAvailableAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(supportsCameraType(['front', 'user', 'facetime'], 'user', devices));\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isBackCameraAvailableAsync(devices) {\n  return _regeneratorRuntime.async(function isBackCameraAvailableAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(supportsCameraType(['back', 'rear'], 'environment', devices));\n\n        case 2:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction supportsCameraType(labels, type, devices) {\n  var cameras, _cameras$filter, _cameras$filter2, hasCamera, _cameras$filter3, _cameras$filter4, isCapable;\n\n  return _regeneratorRuntime.async(function supportsCameraType$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          if (devices) {\n            _context8.next = 6;\n            break;\n          }\n\n          if (navigator.mediaDevices.enumerateDevices) {\n            _context8.next = 3;\n            break;\n          }\n\n          return _context8.abrupt(\"return\", null);\n\n        case 3:\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(navigator.mediaDevices.enumerateDevices());\n\n        case 5:\n          devices = _context8.sent;\n\n        case 6:\n          cameras = devices.filter(function (t) {\n            return t.kind === 'videoinput';\n          });\n          _cameras$filter = cameras.filter(function (camera) {\n            return labels.some(function (label) {\n              return camera.label.toLowerCase().includes(label);\n            });\n          }), _cameras$filter2 = _slicedToArray(_cameras$filter, 1), hasCamera = _cameras$filter2[0];\n          _cameras$filter3 = cameras.filter(function (camera) {\n            if (!('getCapabilities' in camera)) {\n              return null;\n            }\n\n            var capabilities = camera.getCapabilities();\n\n            if (!capabilities.facingMode) {\n              return null;\n            }\n\n            return capabilities.facingMode.find(function (_) {\n              return type;\n            });\n          }), _cameras$filter4 = _slicedToArray(_cameras$filter3, 1), isCapable = _cameras$filter4[0];\n          return _context8.abrupt(\"return\", (isCapable == null ? void 0 : isCapable.deviceId) || (hasCamera == null ? void 0 : hasCamera.deviceId) || null);\n\n        case 10:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":"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","names":["Platform","userMediaRequested","mountedInstances","requestLegacyUserMediaAsync","props","optionalSource","id","optional","sourceId","constraintToSourceId","constraint","deviceId","Array","isArray","length","ideal","Promise","resolve","MediaStreamTrack","getSources","sources","audioSource","videoSource","forEach","source","kind","audioSourceId","audioConstraints","videoSourceId","videoConstraints","sourceSelectedAsync","isMuted","constraints","video","audio","getAnyUserMediaAsync","requestUserMediaAsync","canGetUserMedia","ignoreConstraints","getUserMediaAsync","name","navigator","mediaDevices","getUserMedia","_getUserMedia","reject","call","isDOMAvailable","isFrontCameraAvailableAsync","devices","supportsCameraType","isBackCameraAvailableAsync","labels","type","enumerateDevices","cameras","filter","t","camera","some","label","toLowerCase","includes","hasCamera","capabilities","getCapabilities","facingMode","find","_","isCapable"],"sourceRoot":"","sources":["../src/WebUserMediaManager.ts"],"sourcesContent":["/* eslint-env browser */\n/**\n * A web-only module for ponyfilling the UserMedia API.\n */\nimport { Platform } from 'expo-modules-core';\n\nexport const userMediaRequested: boolean = false;\n\nexport const mountedInstances: any[] = [];\n\nasync function requestLegacyUserMediaAsync(props): Promise<any[]> {\n  const optionalSource = (id) => ({ optional: [{ sourceId: id }] });\n\n  const constraintToSourceId = (constraint) => {\n    const { deviceId } = constraint;\n\n    if (typeof deviceId === 'string') {\n      return deviceId;\n    }\n\n    if (Array.isArray(deviceId) && deviceId.length > 0) {\n      return deviceId[0];\n    }\n\n    if (typeof deviceId === 'object' && deviceId.ideal) {\n      return deviceId.ideal;\n    }\n\n    return null;\n  };\n\n  const sources: any[] = await new Promise((resolve) =>\n    // @ts-ignore: https://caniuse.com/#search=getSources Chrome for Android (78) & Samsung Internet (10.1) use this\n    MediaStreamTrack.getSources((sources) => resolve(sources))\n  );\n\n  let audioSource = null;\n  let videoSource = null;\n\n  sources.forEach((source) => {\n    if (source.kind === 'audio') {\n      audioSource = source.id;\n    } else if (source.kind === 'video') {\n      videoSource = source.id;\n    }\n  });\n\n  const audioSourceId = constraintToSourceId(props.audioConstraints);\n  if (audioSourceId) {\n    audioSource = audioSourceId;\n  }\n\n  const videoSourceId = constraintToSourceId(props.videoConstraints);\n  if (videoSourceId) {\n    videoSource = videoSourceId;\n  }\n\n  return [optionalSource(audioSource), optionalSource(videoSource)];\n}\n\nasync function sourceSelectedAsync(\n  isMuted: boolean,\n  audioConstraints?: MediaTrackConstraints | boolean,\n  videoConstraints?: MediaTrackConstraints | boolean\n): Promise<MediaStream> {\n  const constraints: MediaStreamConstraints = {\n    video: typeof videoConstraints !== 'undefined' ? videoConstraints : true,\n  };\n\n  if (!isMuted) {\n    constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n  }\n\n  return await getAnyUserMediaAsync(constraints);\n}\n\nexport async function requestUserMediaAsync(\n  props: { audio?: any; video?: any },\n  isMuted: boolean = true\n): Promise<MediaStream> {\n  if (canGetUserMedia()) {\n    return await sourceSelectedAsync(isMuted, props.audio, props.video);\n  }\n  const [audio, video] = await requestLegacyUserMediaAsync(props);\n  return await sourceSelectedAsync(isMuted, audio, video);\n}\n\nexport async function getAnyUserMediaAsync(\n  constraints: MediaStreamConstraints,\n  ignoreConstraints: boolean = false\n): Promise<MediaStream> {\n  try {\n    return await getUserMediaAsync({\n      ...constraints,\n      video: ignoreConstraints || constraints.video,\n    });\n  } catch (error) {\n    if (!ignoreConstraints && error.name === 'ConstraintNotSatisfiedError') {\n      return await getAnyUserMediaAsync(constraints, true);\n    }\n    throw error;\n  }\n}\n\nexport async function getUserMediaAsync(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  const _getUserMedia =\n    navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'];\n  return new Promise((resolve, reject) =>\n    _getUserMedia.call(navigator, constraints, resolve, reject)\n  );\n}\n\nexport function canGetUserMedia(): boolean {\n  return (\n    // SSR\n    Platform.isDOMAvailable &&\n    // Has any form of media API\n    !!(\n      (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n      navigator['mozGetUserMedia'] ||\n      navigator['webkitGetUserMedia'] ||\n      navigator['msGetUserMedia']\n    )\n  );\n}\n\nexport async function isFrontCameraAvailableAsync(\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  return await supportsCameraType(['front', 'user', 'facetime'], 'user', devices);\n}\n\nexport async function isBackCameraAvailableAsync(\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  return await supportsCameraType(['back', 'rear'], 'environment', devices);\n}\n\nasync function supportsCameraType(\n  labels: string[],\n  type: string,\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  if (!devices) {\n    if (!navigator.mediaDevices.enumerateDevices) {\n      return null;\n    }\n    devices = await navigator.mediaDevices.enumerateDevices();\n  }\n  const cameras = devices.filter((t) => t.kind === 'videoinput');\n  const [hasCamera] = cameras.filter((camera) =>\n    labels.some((label) => camera.label.toLowerCase().includes(label))\n  );\n  const [isCapable] = cameras.filter((camera) => {\n    if (!('getCapabilities' in camera)) {\n      return null;\n    }\n\n    const capabilities = (camera as any).getCapabilities();\n    if (!capabilities.facingMode) {\n      return null;\n    }\n\n    return capabilities.facingMode.find((_: string) => type);\n  });\n\n  return isCapable?.deviceId || hasCamera?.deviceId || null;\n}\n"]},"metadata":{},"sourceType":"module"}